{"version":3,"sources":["aphid-hero.png","actions/index.js","components/NewBug.js","components/Modal.js","components/FilterForm.js","components/BugChart.js","components/UserDetails.js","components/SideBar.js","components/BugStatus.js","components/BugSeverity.js","components/EditBug.js","components/BugError.js","components/BugBody.js","components/ExpandedBug.js","components/BugTitle.js","components/Bug.js","components/BugDropdown.js","components/BugFeed.js","components/Dashboard.js","components/Login.js","components/Logout.js","components/NavBar.js","components/GitTab.js","components/Home.js","App.js","reducers/index.js","serviceWorker.js","index.js"],"names":["module","exports","selectBug","bug","type","payload","signIn","userObj","connect","state","addBug","user","props","useState","title","project","severity","blameFile","summary","readOut","status","userId","input","setInput","handleChange","event","target","id","value","className","onSubmit","preventDefault","newBug","googleId","axios","post","process","then","response","console","log","setModalIsActive","catch","error","htmlFor","name","onChange","Modal","modalIsActive","modalTitle","aria-label","onClick","children","bugs","selectedBug","filters","selectFilter","filter","activeButton","setActiveButton","bugFilter","setBugFilter","setFilterButton","e","changeFilter","key","map","sort","i","arr","BugChart","data","forEach","useEffect","ctx","document","getElementById","colors","Chart","labels","datasets","minor","moderate","breaking","backgroundColor","borderColor","minBarLength","barThickness","options","animation","animateScale","cornerRadius","cutoutPercentage","legend","display","position","align","fontColor","fontFamily","boxWidth","padding","usePointStyle","drawRoundedRectangle","scales","yAxes","ticks","beginAtZero","length","width","height","style","maxWidth","givenName","slice","email","SideBar","BugStatus","BugSeverity","editBug","newBugs","_id","put","editedBug","BugError","deleteBug","newList","delete","submitText","BugTitle","Bug","isOpen","setIsOpen","isActive","setIsActive","toggle","checkFilters","a","b","createdAt","loadBugs","get","clientId","history","useHistory","buttonText","onSuccess","profileObj","push","onFailure","cookiePolicy","render","renderProps","disabled","signOut","onLogoutSuccess","onLogOutFailure","NavBar","role","href","aria-expanded","data-target","aria-hidden","Logout","GitTab","viewBox","fill","color","top","border","left","transform","d","transformOrigin","Home","src","HeroSVG","alt","App","path","combineReducers","action","Boolean","window","location","hostname","match","ReactDOM","StrictMode","store","createStore","reducers","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,wC,uNCQ9BC,EAAY,SAACC,GAEtB,MAAO,CACHC,KAAM,eACNC,QAASF,IAgCJG,EAAS,SAACC,GACnB,MAAO,CACHH,KAAM,UACNC,QAASE,I,cCsGjB,IAOeC,eAPS,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAMC,OACdC,KAAMF,EAAME,QAIoB,CACpCD,OD7IkB,SAACP,GACnB,MAAO,CACHC,KAAM,UACNC,QAASF,KCyIFK,EAvJf,SAAgBI,GAAQ,IAAD,EACOC,mBAAS,CAC/BC,MAAO,GACPC,QAAS,GACTC,SAAU,WACVC,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,OAAQ,OACRC,OAAQ,KATO,mBACZC,EADY,KACLC,EADK,KAWbC,EAAe,SAACC,GAClBF,EAAS,eAAKD,EAAN,eAAcG,EAAMC,OAAOC,GAAKF,EAAMC,OAAOE,UAqBzD,OACI,yBAAKC,UAAU,gBACX,0BAAMC,SArBO,SAACL,GAClBA,EAAMM,iBACNnB,EAAMF,OAAOY,GACb,IAAMU,EAAM,eACLV,EADK,CAERD,OAAQT,EAAMD,KAAKsB,WAEvBC,IACKC,KADL,UACaC,2CADb,SAC+C,CACvCJ,WAEHK,MAAK,SAACC,GACHC,QAAQC,IAAIF,GACZ1B,EAAM6B,kBAAiB,MAE1BC,OAAM,SAACC,GACJJ,QAAQC,IAAIG,OAKcd,UAAU,gBACpC,yBAAKA,UAAU,SACX,2BAAOA,UAAU,QAAQe,QAAQ,SAAjC,UAGA,2BACIf,UAAU,QACVzB,KAAK,OACLyC,KAAK,QACLlB,GAAG,QACHC,MAAON,EAAMR,MACbgC,SAAUtB,KAGlB,yBAAKK,UAAU,SACX,2BAAOA,UAAU,QAAQe,QAAQ,WAAjC,YAGA,2BACIf,UAAU,QACVzB,KAAK,OACLyC,KAAK,UACLlB,GAAG,UACHC,MAAON,EAAMP,QACb+B,SAAUtB,KAGlB,yBAAKK,UAAU,SACX,2BAAOA,UAAU,QAAQe,QAAQ,aAAjC,eAGA,2BACIf,UAAU,QACVzB,KAAK,OACLyC,KAAK,YACLlB,GAAG,YACHC,MAAON,EAAML,UACb6B,SAAUtB,KAGlB,yBAAKK,UAAU,SACX,2BAAOA,UAAU,QAAQe,QAAQ,WAAjC,YAGA,8BACIf,UAAU,WACVzB,KAAK,OACLyC,KAAK,UACLlB,GAAG,UACHC,MAAON,EAAMJ,QACb4B,SAAUtB,KAGlB,yBAAKK,UAAU,SACX,2BAAOA,UAAU,QAAQe,QAAQ,WAAjC,kBAGA,2BACIf,UAAU,QACVzB,KAAK,OACLyC,KAAK,UACLlB,GAAG,UACHC,MAAON,EAAMH,QACb2B,SAAUtB,KAGlB,yBAAKK,UAAU,6BACX,2BAAOA,UAAU,QAAQe,QAAQ,YAAjC,aAGA,yBAAKf,UAAU,UACX,4BACIgB,KAAK,WACLlB,GAAG,WACHmB,SAAUtB,EACVI,MAAON,EAAMN,UAEb,4BAAQY,MAAM,YAAd,YACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,YAAd,cAGR,2BAAOC,UAAU,QAAQe,QAAQ,UAAjC,eAGA,yBAAKf,UAAU,UACX,4BACIgB,KAAK,SACLlB,GAAG,SACHmB,SAAUtB,EACVI,MAAON,EAAMF,QAEb,4BAAQQ,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,aAIZ,yBAAKC,UAAU,oBACX,yBAAKA,UAAU,WACX,4BAAQzB,KAAK,SAASyB,UAAU,kBAAhC,kBCzIT,SAASkB,EAAMnC,GAC1B,OACI,yBAAKiB,UAAWjB,EAAMoC,cAAgB,kBAAoB,SACtD,yBAAKnB,UAAU,qBACf,yBAAKA,UAAU,cACX,4BAAQA,UAAU,mBACd,uBAAGA,UAAU,oBAAoBjB,EAAMqC,YACvC,4BACIpB,UAAU,SACVqB,aAAW,QACXC,QAAS,kBAAMvC,EAAM6B,kBAAiB,OAG9C,6BAASZ,UAAU,mBAAmBjB,EAAMwC,YC8E5D,IAQe5C,eARS,SAACC,GACrB,MAAO,CACH4C,KAAM5C,EAAM4C,KACZC,YAAa7C,EAAM6C,YACnBC,QAAS9C,EAAM8C,WAIiB,CACpCC,aHjEwB,SAACC,GACzB,MAAO,CACHrD,KAAM,kBACNC,QAASoD,KG6DFjD,EAjGf,SAAoBI,GAAQ,IAAD,EACiBC,mBAAS,QAD1B,mBAChB6C,EADgB,KACFC,EADE,OAEW9C,mBAAS,CACvCO,OAAQ,OACRL,QAAS,KAJU,mBAEhB6C,EAFgB,KAELC,EAFK,KAMjBC,EAAkB,SAACC,GACrBJ,EAAgBI,EAAErC,OAAOE,OACzBoC,EAAaD,IAKXC,EAAe,SAACD,GAClBF,EAAa,eAAKD,EAAN,eAAkBG,EAAErC,OAAOmB,KAAOkB,EAAErC,OAAOE,SACvDhB,EAAM4C,aAAN,eAAwBI,EAAxB,eAAoCG,EAAErC,OAAOmB,KAAOkB,EAAErC,OAAOE,UAEjE,OACI,yBAAKC,UAAU,oBACX,yBAAKA,UAAU,uBACX,2BAAOe,QAAQ,UAAf,eACA,yBAAKf,UAAU,sBACX,4BACIsB,QAASW,EACTjB,KAAK,SACLjB,MAAM,OACNC,UACqB,SAAjB6B,EACM,8BACA,iBAPd,QAYA,4BACIP,QAASW,EACTjB,KAAK,SACLjB,MAAM,SACNC,UACqB,WAAjB6B,EACM,8BACA,iBAPd,UAYA,4BACIP,QAASW,EACTjB,KAAK,SACLjB,MAAM,GACNC,UACqB,KAAjB6B,EACM,8BACA,iBAPd,SAcR,yBAAK7B,UAAU,wBACX,2BAAOe,QAAQ,UAAf,YACA,yBAAKf,UAAU,8BACX,4BACIgB,KAAK,UACLlB,GAAG,cACHmB,SAxDK,SAACiB,GACtBC,EAAaD,KAyDG,4BAAQnC,MAAM,GAAGqC,IAAK,GAAtB,OAGCrD,EAAMyC,KACFa,KAAI,SAAC/D,GAAD,OAASA,EAAIY,WACjBoD,OACAV,QAAO,SAAC1C,EAASqD,EAAGC,GAAb,OAAqBtD,IAAYsD,EAAID,EAAI,MAChDF,KAAI,SAACnD,EAASqD,GACX,OACI,4BAAQxC,MAAOb,EAASkD,IAAKG,EAAI,GAC5BrD,a,iBC/E1B,SAASuD,EAAS1D,GAC7B,IAAI2D,EAAO,GA2DX,OA1DA3D,EAAMyC,KACDI,QAAO,SAACtD,GAAD,MAAwB,SAAfA,EAAIiB,UACpBoD,SAAQ,SAACrE,GACFoE,EAAKpE,EAAIa,UACTuD,EAAKpE,EAAIa,YAETuD,EAAKpE,EAAIa,UAAY,KAGjCyD,qBAAU,WACN,IAAMC,EAAMC,SAASC,eAAe,aAC9BC,EAAS,CAAC,UAAW,UAAW,WACtC,IAAIC,IAAMJ,EAAK,CACXtE,KAAM,MACNmE,KAAM,CACFQ,OAAQ,CAAC,QAAS,WAAY,YAC9BC,SAAU,CACN,CACIT,KAAM,CAACA,EAAKU,MAAOV,EAAKW,SAAUX,EAAKY,UACvCC,gBAAiB,CAACP,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAC/CQ,YAAa,CAACR,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAC3CS,aAAc,EACdC,aAAc,MAI1BC,QAAS,CACLC,UAAW,CACPC,cAAc,GAElBC,aAAc,GACdC,iBAAkB,GAClBC,OAAQ,CACJC,SAAS,EACTC,SAAU,SACVC,MAAO,SACPjB,OAAQ,CACJkB,UAAW,QACXC,WAAY,YACZC,SAAU,GACVC,QAAS,GACTC,eAAe,EACfC,sBAAsB,IAI9BC,OAAQ,CACJC,MAAO,CACH,CACIC,MAAO,CACHC,aAAa,WAOtC,CAAC9F,EAAMyC,OAEN,yBAAKxB,UAAU,cACX,4BACI,0BAAMA,UAAU,aACXjB,EAAMyC,KAAKI,QAAO,SAACtD,GAAD,MAAwB,SAAfA,EAAIiB,UAAmBuF,QAC/C,IAHZ,kBAMA,4BACIhF,GAAG,YACHiF,MAAM,MACNC,OAAO,MACPC,MAAO,CAAEC,SAAU,YCpDnC,IAIevG,eAJS,SAACC,GACrB,MAAO,CAAEE,KAAMF,EAAME,QAGe,GAAzBH,EAxBf,SAAqBI,GACjB,OACI,yBAAKiB,UAAU,aACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,qBACX,2BAAIjB,EAAMD,KAAOC,EAAMD,KAAKqG,UAAUC,MAAM,EAAG,GAAK,OAG3DrG,EAAMD,KACH,yBAAKkB,UAAU,gBACX,4BAAKjB,EAAMD,KAAKqG,WAChB,uBAAGnF,UAAU,cAAcjB,EAAMD,KAAKuG,QAG1C,oDCZD,SAASC,EAAQvG,GAC5B,OACI,yBAAKiB,UAAU,gBACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,MACA,4BACIsB,QAAS,kBAAMvC,EAAM6B,kBAAiB,IACtCZ,UAAU,qBAEV,uBAAGA,UAAU,eAJjB,aAOJ,kBAACyC,EAAD,CAAUjB,KAAMzC,EAAMyC,OACtB,kBAAC,EAAD,CAAYA,KAAMzC,EAAMyC,KAAMW,aAAcpD,EAAMoD,gBChB/C,SAASoD,EAAUxG,GAC9B,OACI,yBAAKiB,UAAU,gBACX,0BAAMA,UAAS,kBAAajB,EAAMQ,OAAnB,eACX,uBAAGS,UAAU,2BADjB,UACsD,KAEtD,2BAAIjB,EAAMQ,SCNP,SAASiG,EAAYzG,GAChC,OACI,yBAAKiB,UAAU,gBACX,2BACI,0BAAMA,UAAU,aACZ,uBAAGA,UAAU,uBADjB,YACoD,KAEpD,0BAAMA,UAAS,mCAA8BjB,EAAMI,WAC9CJ,EAAMI,Y,YCyI3B,IASeR,eATS,SAACC,GAErB,MAAO,CACH4C,KAAM5C,EAAM4C,KACZiE,QAAS7G,EAAM6G,QACfhE,YAAa7C,EAAM6C,eAIa,CACpCgE,QTtImB,SAACnH,GACpB,MAAO,CACHC,KAAM,WACNC,QAASF,ISoIbD,aAFWM,EAtJf,SAAiBI,GAAQ,IAAD,EACMC,mBAASD,EAAMT,KADrB,mBACbmB,EADa,KACNC,EADM,KAEpBkD,qBAAU,WACNlD,EAASX,EAAMT,OAChB,CAACS,EAAMT,MACV,IAAMqB,EAAe,SAACC,GAClBF,EAAS,eAAKD,EAAN,eAAcG,EAAMC,OAAOC,GAAKF,EAAMC,OAAOE,UAwBzD,OACI,yBAAKC,UAAU,gBACX,0BAAMC,SAxBO,SAACL,GAClBA,EAAMM,iBACN,IAAMwF,EAAU3G,EAAMyC,KAAKa,KAAI,SAAC/D,GAC5B,OAAIA,EAAIqH,MAAQlG,EAAMkG,IACXlG,EAEJnB,KAEX+B,IACKuF,IADL,UACYrF,2CADZ,iBAC8CxB,EAAM0C,YAAYkE,KAAO,CAC/DE,UAAWpG,IAEde,MAAK,SAACC,GACH1B,EAAM0G,QAAN,YAAkBC,IAClB3G,EAAM6B,kBAAiB,GACvB7B,EAAMV,UAAUoB,GAChBiB,QAAQC,IAAIF,MAEfI,OAAM,SAACC,GACJJ,QAAQC,IAAIG,OAKcd,UAAU,gBACpC,yBAAKA,UAAU,SACX,2BAAOA,UAAU,QAAQe,QAAQ,SAAjC,UAGA,2BACIf,UAAU,QACVzB,KAAK,OACLyC,KAAK,QACLlB,GAAG,QACHC,MAAON,EAAMR,MACbgC,SAAUtB,KAGlB,yBAAKK,UAAU,SACX,2BAAOA,UAAU,QAAQe,QAAQ,WAAjC,YAGA,2BACIf,UAAU,QACVzB,KAAK,OACLyC,KAAK,UACLlB,GAAG,UACHC,MAAON,EAAMP,QACb+B,SAAUtB,KAGlB,yBAAKK,UAAU,SACX,2BAAOA,UAAU,QAAQe,QAAQ,aAAjC,eAGA,2BACIf,UAAU,QACVzB,KAAK,OACLyC,KAAK,YACLlB,GAAG,YACHC,MAAON,EAAML,UACb6B,SAAUtB,KAGlB,yBAAKK,UAAU,SACX,2BAAOA,UAAU,QAAQe,QAAQ,WAAjC,YAGA,8BACIf,UAAU,WACVzB,KAAK,OACLyC,KAAK,UACLlB,GAAG,UACHC,MAAON,EAAMJ,QACb4B,SAAUtB,KAGlB,yBAAKK,UAAU,SACX,2BAAOA,UAAU,QAAQe,QAAQ,WAAjC,kBAGA,2BACIf,UAAU,QACVzB,KAAK,OACLyC,KAAK,UACLlB,GAAG,UACHC,MAAON,EAAMH,QACb2B,SAAUtB,KAGlB,yBAAKK,UAAU,6BACX,2BAAOA,UAAU,QAAQe,QAAQ,YAAjC,aAGA,yBAAKf,UAAU,UACX,4BACIgB,KAAK,WACLlB,GAAG,WACHmB,SAAUtB,EACVI,MAAON,EAAMN,UAEb,4BAAQY,MAAM,YAAd,YACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,YAAd,cAGR,2BAAOC,UAAU,QAAQe,QAAQ,UAAjC,eAGA,yBAAKf,UAAU,UACX,4BACIgB,KAAK,SACLlB,GAAG,SACHmB,SAAUtB,EACVI,MAAON,EAAMF,QAEb,4BAAQQ,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,aAIZ,yBAAKC,UAAU,oBACX,yBAAKA,UAAU,WACX,4BAAQzB,KAAK,SAASyB,UAAU,kBAAhC,uBCvIT,SAAS8F,EAAS/G,GAC7B,OACI,yBAAKiB,UAAU,0BACX,2BACI,0BAAMA,UAAU,aACZ,uBAAGA,UAAU,eADjB,mBAIJ,uBAAGA,UAAU,qBACRjB,EAAM+B,MAAQ/B,EAAM+B,MAAQ,+BCsD7C,IAIenC,eAJS,SAACC,GACrB,MAAO,CAAE4C,KAAM5C,EAAM4C,KAAMC,YAAa7C,EAAM6C,eAGV,CACpCsE,UXxCqB,SAACzH,GACtB,MAAO,CACHC,KAAM,aACNC,QAASF,IWsCbD,aAFWM,EA1Df,SAAiBI,GAAQ,IAAD,EACsBC,oBAAS,GAD/B,mBACbmC,EADa,KACEP,EADF,KAYpB,OACI,yBAAKZ,UAAU,iBACX,uBAAGA,UAAU,gBACT,0BAAMA,UAAU,aACZ,uBAAGA,UAAU,sBADjB,WACkD,KAC1C,IACPjB,EAAMT,IAAIe,SAEf,kBAACmG,EAAD,CAAarG,SAAUJ,EAAMT,IAAIa,WACjC,uBAAGa,UAAU,gBACT,0BAAMA,UAAU,aACZ,uBAAGA,UAAU,oBADjB,eAEQ,IACPjB,EAAMT,IAAIc,WAEf,kBAAC0G,EAAD,CAAUhF,MAAO/B,EAAMT,IAAIgB,UAC3B,kBAACiG,EAAD,CAAWhG,OAAQR,EAAMT,IAAIiB,SAC7B,yBAAKS,UAAU,qBACX,4BACIA,UAAU,gCACVsB,QAAS,kBAAMV,GAAiB,KAEhC,uBAAGZ,UAAU,gBAJjB,QAMA,4BACIA,UAAU,mBACVsB,QAAS,kBApCP,SAACxB,GACf,IAAMkG,EAAUjH,EAAMyC,KAAKI,QAAO,SAACtD,GAAD,OAASA,EAAIqH,MAAQ7F,KACvDO,IACK4F,OADL,UACe1F,2CADf,gBACgDxB,EAAM0C,YAAYkE,MAC7DnF,MAAK,SAACkC,GACH3D,EAAMgH,UAAUC,GAChBjH,EAAMV,UAAU,MAChBqC,QAAQC,IAAI+B,MA6BOqD,CAAUhH,EAAMT,IAAIqH,OAEnC,uBAAG3F,UAAU,qBAJjB,WAOJ,kBAACkB,EAAD,CACIC,cAAeA,EACfP,iBAAkBA,EAClBQ,WAAW,WACX8E,WAAW,gBAEX,kBAAC,EAAD,CAAS5H,IAAKS,EAAMT,IAAKsC,iBAAkBA,SCjC3D,IAIejC,eAJS,SAACC,GACrB,MAAO,CAAE6C,YAAa7C,EAAM6C,eAGjB9C,EA3Bf,SAAqBI,GACjB,OACI,yBAAKiB,UAAU,iBACVjB,EAAM0C,YACH,oCACI,4BAAK1C,EAAM0C,YAAYxC,OACvB,kBAAC,EAAD,CACIX,IAAKS,EAAM0C,YACXsE,UAAWhH,EAAMgH,aAIzB,yBAAK/F,UAAU,kBACX,0BAAMA,UAAU,qBACZ,uBAAGA,UAAU,gBAEjB,gEClBL,SAASmG,EAASpH,GAC7B,OACI,yBAAKiB,UAAU,qBACX,0BAAMA,UAAW,kBACb,0BAAMA,UAAS,6BAAwBjB,EAAMI,YAC7C,wBAAIa,UAAU,aACTjB,EAAME,MAAM6F,OAAS,GAArB,UACQ/F,EAAME,MAAMmG,MAAM,EAAG,IAD7B,MAEKrG,EAAME,QAGpB,4BAAKF,EAAMG,UCVR,SAASkH,EAAIrH,GAAQ,IAAD,EACHC,oBAAS,GADN,mBACxBqH,EADwB,KAChBC,EADgB,OAECtH,oBAAS,GAFV,mBAExBuH,EAFwB,KAEdC,EAFc,KAI/B5D,qBAAU,WACF7D,EAAM0C,cACF1C,EAAMT,IAAIqH,MAAQ5G,EAAM0C,YAAYkE,IACpCa,GAAY,GAEZA,GAAY,MAGrB,CAACzH,EAAMT,IAAKS,EAAM0C,cAKrB,OACI,6BACIzB,UAAWuG,EAAW,mBAAqB,WAC3CjF,QAAS,WACLvC,EAAMV,UAAUU,EAAMT,OAG1B,kBAAC6H,EAAD,CACIrG,GAAIf,EAAMT,IAAIqH,IACd1G,MAAOF,EAAMT,IAAIW,MACjBC,QAASH,EAAMT,IAAIY,QACnBC,SAAUJ,EAAMT,IAAIa,SACpBsH,OAfS,WACjBH,GAAWD,OCUnB,IAQe1H,eARS,SAACC,GACrB,MAAO,CACH4C,KAAM5C,EAAM4C,KACZC,YAAa7C,EAAM6C,YACnBC,QAAS9C,EAAM8C,WAIiB,CACpCrD,aADWM,EAhCf,SAAqBI,GAOjB,OACI,yBAAKiB,UAAU,sBACX,yBAAKA,UAAU,qBACX,4BAAQgB,KAAK,MAAMlB,GAAG,UAAUmB,SAT1B,SAACiB,GACf,IAAMT,EAAc1C,EAAMyC,KAAKI,QAC3B,SAACtD,GAAD,OAASA,EAAIW,QAAUiD,EAAErC,OAAOE,SAEpChB,EAAMV,UAAN,MAAAU,EAAK,YAAc0C,MAMN1C,EAAMyC,KAAKa,KAAI,SAAC/D,EAAKiE,GAClB,OACI,4BAAQxC,MAAOzB,EAAIW,MAAOmD,IAAKG,GAC1BjE,EAAIW,gBCwBrC,IASeN,eATS,SAACC,GAErB,MAAO,CACH4C,KAAM5C,EAAM4C,KACZC,YAAa7C,EAAM6C,YACnBC,QAAS9C,EAAM8C,WAIiB,CACpCrD,aADWM,EA7Cf,SAAiBI,GAcb,OACI,oCACI,yBAAKiB,UAAU,aACVjB,EAAMyC,KACFI,QAAO,SAACtD,GAAD,OAjBH,SAACA,GAClB,OAAIS,EAAM2C,QAAQnC,QAAUR,EAAM2C,QAAQxC,QAElCZ,EAAIiB,SAAWR,EAAM2C,QAAQnC,QAC7BjB,EAAIY,UAAYH,EAAM2C,QAAQxC,QAE3BH,EAAM2C,QAAQnC,SAAWR,EAAM2C,QAAQxC,QACvCZ,EAAIiB,SAAWR,EAAM2C,QAAQnC,SAC7BR,EAAM2C,QAAQxC,UAAYH,EAAM2C,QAAQnC,SACxCjB,EAAIY,UAAYH,EAAM2C,QAAQxC,QAQZwH,CAAapI,MAC7BgE,MAAK,SAACqE,EAAGC,GAAJ,OAAWD,EAAEE,UAAYD,EAAEC,WAAa,EAAI,KACjDxE,KAAI,SAAC/D,EAAKiE,GACP,OACI,kBAAC6D,EAAD,CACI9H,IAAKA,EACL8D,IAAK9D,EAAIW,MAAQsD,EACjBd,YAAa1C,EAAM0C,YACnBpD,UAAWU,EAAMV,gBAKrC,kBAAC,EAAD,CAAamD,KAAMzC,EAAMyC,WCUrC,IAQe7C,eARS,SAACC,GACrB,MAAO,CACH4C,KAAM5C,EAAM4C,KACZC,YAAa7C,EAAM6C,YACnB3C,KAAMF,EAAME,QAIoB,CACpCT,YACAyI,SjBzDoB,SAACtF,GACrB,MAAO,CACHjD,KAAM,YACNC,QAASgD,KiBoDF7C,EA1Cf,SAAmBI,GAAQ,IAAD,EACoBC,oBAAS,GAD7B,mBACfmC,EADe,KACAP,EADA,KAetB,OAbAgC,qBAAU,WACF7D,EAAMD,MACNuB,IACK0G,IADL,UANAxG,2CAMA,iBACwBxB,EAAMD,KAAKsB,WAC9BI,MAAK,SAAUC,GACZ1B,EAAM+H,SAASrG,EAASiC,MACxBhC,QAAQC,IAAIF,MAEfI,OAAM,SAAUC,GACbJ,QAAQC,IAAIG,QAGzB,CAAC/B,EAAMD,OAEN,6BAASkB,UAAU,kBACf,kBAACsF,EAAD,CAAS9D,KAAMzC,EAAMyC,KAAMZ,iBAAkBA,IAC7C,yBAAKZ,UAAU,wBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEJ,kBAACkB,EAAD,CACIC,cAAeA,EACfP,iBAAkBA,EAClBQ,WAAW,UACX8E,WAAW,WAEX,kBAAC,EAAD,CAAQ1E,KAAMzC,EAAMyC,KAAMZ,iBAAkBA,S,QCnCtDoG,EAAWzG,2EACjBG,QAAQC,IAAIqG,GAiCZ,IAIerI,eAJS,SAACC,GACrB,MAAO,CAAEH,OAAQG,EAAMH,OAAQK,KAAMF,EAAME,QAGP,CAAEL,UAA3BE,EAnCf,SAAeI,GACX,IAAMkI,EAAUC,cAShB,OACI,kBAAC,cAAD,CACIF,SAAUA,EACVG,WAAW,iBACXC,UAZU,SAAC3G,GACfC,QAAQC,IAAIF,EAAS4G,YACrBtI,EAAMN,OAAOgC,EAAS4G,YACtBJ,EAAQK,KAAK,eAUTC,UARU,SAAC9G,GACfC,QAAQC,IAAIF,EAAS4G,aAQjBG,aAAc,qBAEdC,OAAQ,SAACC,GAAD,OACJ,4BACI1H,UAAU,oBACVsB,QAASoG,EAAYpG,QACrBqG,SAAUD,EAAYC,UAEtB,uBAAG3H,UAAU,kBALjB,yBCODrB,kBAAQ,KAAM,CAAEF,SAAQmJ,QnBgBhB,SAAClJ,GACpB,MAAO,CACHH,KAAM,WACNC,QAASE,KmBnBFC,EA3Bf,SAAeI,GACX,IAAMkI,EAAUC,cAShB,OACI,kBAAC,eAAD,CACIF,SAdKzG,2EAeLsH,gBAXU,WACdnH,QAAQC,IAAI,uBACZ5B,EAAM6I,UACNX,EAAQK,KAAK,MASTQ,gBAPU,SAACrH,GACfC,QAAQC,IAAIF,EAAS4G,aAOjBI,OAAQ,SAACC,GAAD,OACJ,4BACI1H,UAAU,iBACVsB,QAASoG,EAAYpG,QACrBqG,SAAUD,EAAYC,UAH1B,gBCpBD,SAASI,IACpB,OACI,yBAAK/H,UAAU,SAASgI,KAAK,aAAa3G,aAAW,mBACjD,yBAAKrB,UAAU,gBACX,uBAAGA,UAAU,cAAciI,KAAK,KAC5B,4BACI,uBAAGjI,UAAU,eADjB,UAKJ,uBACIiI,KAAK,IACLD,KAAK,SACLhI,UAAU,uBACVqB,aAAW,OACX6G,gBAAc,QACdC,cAAY,sBAEZ,0BAAMC,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,WAI1B,yBAAKtI,GAAG,qBAAqBE,UAAU,eACnC,yBAAKA,UAAU,gBACX,uBACIiI,KAAK,oCACLjI,UAAU,eAFd,gBAQJ,yBAAKA,UAAU,cACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,WACX,kBAAC,EAAD,MACA,kBAACqI,EAAD,W,qBCxCb,SAASC,IACpB,OACI,uBACIL,KAAK,mCACLjI,UAAU,gBACVqB,aAAW,yBAEX,yBACI0D,MAAM,KACNC,OAAO,KACPuD,QAAQ,cACRtD,MAAO,CACHuD,KAAM,UACNC,MAAO,UACPvE,SAAU,WACVwE,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,UAAW,gBAEfT,cAAY,QAEZ,0BAAMU,EAAE,sDACR,0BACIA,EAAE,2LACFN,KAAK,eACLvD,MAAO,CAAE8D,gBAAiB,eAC1B/I,UAAU,aAEd,0BACI8I,EAAE,shBACFN,KAAK,eACLxI,UAAU,gBC7Bf,SAASgJ,IACpB,OACI,oCACI,kBAACV,EAAD,MACA,6BAAStI,UAAU,aACf,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,cAAd,SACA,+GAIA,kBAAC,EAAD,MACA,uBAAGiI,KAAK,yCACJ,4BAAQjI,UAAU,kBACd,uBAAGA,UAAU,eADjB,eAKR,yBAAKA,UAAU,oBACX,yBAAKiJ,IAAKC,IAASC,IAAI,OAAOnJ,UAAU,mB,MCUjDoJ,MA5Bf,WACI,OACI,yBAAKpJ,UAAU,OACX,8BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIqJ,KAAK,aACL5B,OAAQ,SAAC1I,GACL,OACI,oCACI,kBAACgJ,EAAD,MACA,kBAAC,EAAD,UAKhB,kBAAC,IAAD,CACIsB,KAAK,IACL5B,OAAQ,SAAC1I,GACL,OAAO,kBAACiK,EAAD,aCWpBM,cAAgB,CAC3B9H,KAnCgB,WAAwB,IAAvBA,EAAsB,uDAAf,GAAI+H,EAAW,uCACvC,MAAoB,YAAhBA,EAAOhL,KACD,CAAEgL,EAAO/K,SAAf,mBAA2BgD,IACJ,aAAhB+H,EAAOhL,MAES,eAAhBgL,EAAOhL,MAES,cAAhBgL,EAAOhL,KAHPgL,EAAO/K,QAMXgD,GA0BPE,QAhBkB,WAAwD,IAAvDiC,EAAsD,uDAA5C,CAAEpE,OAAQ,OAAQL,QAAS,IAAMqK,EAAW,uCACzE,MAAoB,oBAAhBA,EAAOhL,KACAgL,EAAO/K,QAEX,eAAKmF,IAaZlC,YAxBuB,WAAiC,IAAhCA,EAA+B,uDAAjB,KAAM8H,EAAW,uCACvD,MAAoB,iBAAhBA,EAAOhL,KACAgL,EAAO/K,QAEXiD,GAqBP3C,KAXgB,WAA0B,IAAzBA,EAAwB,uDAAjB,KAAMyK,EAAW,uCACzC,MAAoB,YAAhBA,EAAOhL,KACAgL,EAAO/K,QAEXM,KCtBS0K,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCPNC,IAASpC,OACL,kBAAC,IAAMqC,WAAP,KACI,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IACzB,kBAAC,IAAD,KACI,kBAAC,EAAD,SAIZnH,SAASC,eAAe,SDgHtB,kBAAmBmH,WACrBA,UAAUC,cAAcC,MACrB5J,MAAK,SAAA6J,GACJA,EAAaC,gBAEdzJ,OAAM,SAAAC,GACLJ,QAAQI,MAAMA,EAAMyJ,c","file":"static/js/main.b6bdd6d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aphid-hero.ff47c9e0.png\";","export const loadBugs = (bugs) => {\n    return {\n        type: \"LOAD_BUGS\",\n        payload: bugs,\n    };\n};\n\n// action create\nexport const selectBug = (bug) => {\n    // return an action\n    return {\n        type: \"BUG_SELECTED\",\n        payload: bug,\n    };\n};\n\nexport const addBug = (bug) => {\n    return {\n        type: \"ADD_BUG\",\n        payload: bug,\n    };\n};\n\nexport const editBug = (bug) => {\n    return {\n        type: \"EDIT_BUG\",\n        payload: bug,\n    };\n};\n\nexport const deleteBug = (bug) => {\n    return {\n        type: \"DELETE_BUG\",\n        payload: bug,\n    };\n};\n\nexport const selectFilter = (filter) => {\n    return {\n        type: \"FILTER_SELECTED\",\n        payload: filter,\n    };\n};\n\nexport const signIn = (userObj) => {\n    return {\n        type: \"SIGN_IN\",\n        payload: userObj,\n    };\n};\n\nexport const signOut = (userObj) => {\n    return {\n        type: \"SIGN_OUT\",\n        payload: userObj,\n    };\n};\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addBug } from \"../actions\";\nimport axios from \"axios\";\n\nfunction NewBug(props) {\n    const [input, setInput] = useState({\n        title: \"\",\n        project: \"\",\n        severity: \"moderate\",\n        blameFile: \"\",\n        summary: \"\",\n        readOut: \"\",\n        status: \"open\",\n        userId: \"\",\n    });\n    const handleChange = (event) => {\n        setInput({ ...input, [event.target.id]: event.target.value });\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        props.addBug(input);\n        const newBug = {\n            ...input,\n            userId: props.user.googleId,\n        };\n        axios\n            .post(`${process.env.REACT_APP_API}/bugs`, {\n                newBug,\n            })\n            .then((response) => {\n                console.log(response);\n                props.setModalIsActive(false);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    };\n    return (\n        <div className=\"new_bug_wrap\">\n            <form onSubmit={handleSubmit} className=\"new_bug_form\">\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"title\">\n                        Title:\n                    </label>\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        name=\"title\"\n                        id=\"title\"\n                        value={input.title}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"project\">\n                        Project:\n                    </label>\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        name=\"project\"\n                        id=\"project\"\n                        value={input.project}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"blameFile\">\n                        Blame File:\n                    </label>\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        name=\"blameFile\"\n                        id=\"blameFile\"\n                        value={input.blameFile}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"summary\">\n                        Summary:\n                    </label>\n                    <textarea\n                        className=\"textarea\"\n                        type=\"text\"\n                        name=\"summary\"\n                        id=\"summary\"\n                        value={input.summary}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"readOut\">\n                        Error Readout:\n                    </label>\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        name=\"readOut\"\n                        id=\"readOut\"\n                        value={input.readOut}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"field is-grouped last-row\">\n                    <label className=\"label\" htmlFor=\"severity\">\n                        Severity:\n                    </label>\n                    <div className=\"select\">\n                        <select\n                            name=\"severity\"\n                            id=\"severity\"\n                            onChange={handleChange}\n                            value={input.severity}\n                        >\n                            <option value=\"moderate\">Moderate</option>\n                            <option value=\"minor\">Minor</option>\n                            <option value=\"breaking\">Breaking</option>\n                        </select>\n                    </div>\n                    <label className=\"label\" htmlFor=\"status\">\n                        Bug Status:\n                    </label>\n                    <div className=\"select\">\n                        <select\n                            name=\"status\"\n                            id=\"status\"\n                            onChange={handleChange}\n                            value={input.status}\n                        >\n                            <option value=\"open\">Open</option>\n                            <option value=\"closed\">Closed</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"field is-grouped\">\n                    <div className=\"control\">\n                        <button type=\"submit\" className=\"button is-link\">\n                            Add Bug\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        addBug: state.addBug,\n        user: state.user,\n    };\n};\n\nexport default connect(mapStateToProps, {\n    addBug,\n})(NewBug);\n","import React from \"react\";\n\nexport default function Modal(props) {\n    return (\n        <div className={props.modalIsActive ? \"modal is-active\" : \"modal\"}>\n            <div className=\"modal-background\"></div>\n            <div className=\"modal-card\">\n                <header className=\"modal-card-head\">\n                    <p className=\"modal-card-title\">{props.modalTitle}</p>\n                    <button\n                        className=\"delete\"\n                        aria-label=\"close\"\n                        onClick={() => props.setModalIsActive(false)}\n                    ></button>\n                </header>\n                <section className=\"modal-card-body\">{props.children}</section>\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectFilter } from \"../actions\";\n\nfunction FilterForm(props) {\n    const [activeButton, setActiveButton] = useState(\"open\");\n    const [bugFilter, setBugFilter] = useState({\n        status: \"open\",\n        project: \"\",\n    });\n    const setFilterButton = (e) => {\n        setActiveButton(e.target.value);\n        changeFilter(e);\n    };\n    const setProjectFilter = (e) => {\n        changeFilter(e);\n    };\n    const changeFilter = (e) => {\n        setBugFilter({ ...bugFilter, [e.target.name]: e.target.value });\n        props.selectFilter({ ...bugFilter, [e.target.name]: e.target.value });\n    };\n    return (\n        <div className=\"filter_form_wrap\">\n            <div className=\"filter_status_group\">\n                <label htmlFor=\"filter\">Bug Status:</label>\n                <div className=\"filter_status_wrap\">\n                    <button\n                        onClick={setFilterButton}\n                        name=\"status\"\n                        value=\"open\"\n                        className={\n                            activeButton === \"open\"\n                                ? \"filter-button active-button\"\n                                : \"filter-button\"\n                        }\n                    >\n                        Open\n                    </button>\n                    <button\n                        onClick={setFilterButton}\n                        name=\"status\"\n                        value=\"closed\"\n                        className={\n                            activeButton === \"closed\"\n                                ? \"filter-button active-button\"\n                                : \"filter-button\"\n                        }\n                    >\n                        Closed\n                    </button>\n                    <button\n                        onClick={setFilterButton}\n                        name=\"status\"\n                        value=\"\"\n                        className={\n                            activeButton === \"\"\n                                ? \"filter-button active-button\"\n                                : \"filter-button\"\n                        }\n                    >\n                        All\n                    </button>\n                </div>\n            </div>\n            <div className=\"filter_project_group\">\n                <label htmlFor=\"filter\">Project:</label>\n                <div className=\"select is-rounded is-small\">\n                    <select\n                        name=\"project\"\n                        id=\"projectForm\"\n                        onChange={setProjectFilter}\n                    >\n                        <option value=\"\" key={1}>\n                            All\n                        </option>\n                        {props.bugs\n                            .map((bug) => bug.project)\n                            .sort()\n                            .filter((project, i, arr) => project !== arr[i - 1])\n                            .map((project, i) => {\n                                return (\n                                    <option value={project} key={i + 1}>\n                                        {project}\n                                    </option>\n                                );\n                            })}\n                    </select>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        bugs: state.bugs,\n        selectedBug: state.selectedBug,\n        filters: state.filters,\n    };\n};\n\nexport default connect(mapStateToProps, {\n    selectFilter,\n})(FilterForm);\n","import React, { useEffect } from \"react\";\nimport Chart from \"chart.js\";\n\nexport default function BugChart(props) {\n    let data = {};\n    props.bugs\n        .filter((bug) => bug.status === \"open\")\n        .forEach((bug) => {\n            if (data[bug.severity]) {\n                data[bug.severity]++;\n            } else {\n                data[bug.severity] = 1;\n            }\n        });\n    useEffect(() => {\n        const ctx = document.getElementById(\"bug_chart\");\n        const colors = [\"#2B3954\", \"#42516F\", \"#606D88\"];\n        new Chart(ctx, {\n            type: \"bar\",\n            data: {\n                labels: [\"Minor\", \"Moderate\", \"Breaking\"],\n                datasets: [\n                    {\n                        data: [data.minor, data.moderate, data.breaking],\n                        backgroundColor: [colors[0], colors[1], colors[2]],\n                        borderColor: [colors[0], colors[1], colors[2]],\n                        minBarLength: 1,\n                        barThickness: 10,\n                    },\n                ],\n            },\n            options: {\n                animation: {\n                    animateScale: true,\n                },\n                cornerRadius: 20,\n                cutoutPercentage: 70,\n                legend: {\n                    display: false,\n                    position: \"bottom\",\n                    align: \"center\",\n                    labels: {\n                        fontColor: \"white\",\n                        fontFamily: \"Fira Mono\",\n                        boxWidth: 10,\n                        padding: 20,\n                        usePointStyle: true,\n                        drawRoundedRectangle: true,\n                        // fontSize: \"0.8rem\",\n                    },\n                },\n                scales: {\n                    yAxes: [\n                        {\n                            ticks: {\n                                beginAtZero: true,\n                            },\n                        },\n                    ],\n                },\n            },\n        });\n    }, [props.bugs]);\n    return (\n        <div className=\"chart_wrap\">\n            <h1>\n                <span className=\"bug_total\">\n                    {props.bugs.filter((bug) => bug.status === \"open\").length}\n                </span>{\" \"}\n                Bugs in Queue:\n            </h1>\n            <canvas\n                id=\"bug_chart\"\n                width=\"225\"\n                height=\"225\"\n                style={{ maxWidth: \"225px\" }}\n            ></canvas>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction UserDetails(props) {\n    return (\n        <div className=\"user_wrap\">\n            <div className=\"user_avatar\">\n                <div className=\"user_avatar_inner\">\n                    <p>{props.user ? props.user.givenName.slice(0, 1) : \"?\"}</p>\n                </div>\n            </div>\n            {props.user ? (\n                <div className=\"user_details\">\n                    <h2>{props.user.givenName}</h2>\n                    <p className=\"user_email\">{props.user.email}</p>\n                </div>\n            ) : (\n                <p>Please sign in...</p>\n            )}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return { user: state.user };\n};\n\nexport default connect(mapStateToProps, {})(UserDetails);\n","import React from \"react\";\nimport FilterForm from \"./FilterForm\";\nimport BugChart from \"./BugChart\";\nimport UserDetails from \"./UserDetails\";\n\nexport default function SideBar(props) {\n    return (\n        <div className=\"sidebar_wrap\">\n            <div className=\"admin_wrap\">\n                <UserDetails />\n                <button\n                    onClick={() => props.setModalIsActive(true)}\n                    className=\"button is-primary\"\n                >\n                    <i className=\"fas fa-bug\"></i> Add Bug\n                </button>\n            </div>\n            <BugChart bugs={props.bugs} />\n            <FilterForm bugs={props.bugs} changeFilter={props.changeFilter} />\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport default function BugStatus(props) {\n    return (\n        <div className=\"bug_body_row\">\n            <span className={`status--${props.status} bug_label`}>\n                <i className=\"fas fa-question-circle\"></i>Status:{\" \"}\n            </span>\n            <p>{props.status}</p>\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport default function BugSeverity(props) {\n    return (\n        <div className=\"bug_body_row\">\n            <p>\n                <span className=\"bug_label\">\n                    <i className=\"fas fa-wave-square\"></i>Severity:{\" \"}\n                </span>\n                <span className={`severity_label severity--${props.severity}`}>\n                    {props.severity}\n                </span>\n            </p>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { editBug } from \"../actions\";\nimport { selectBug } from \"../actions\";\n\nfunction EditBug(props) {\n    const [input, setInput] = useState(props.bug);\n    useEffect(() => {\n        setInput(props.bug);\n    }, [props.bug]);\n    const handleChange = (event) => {\n        setInput({ ...input, [event.target.id]: event.target.value });\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const newBugs = props.bugs.map((bug) => {\n            if (bug._id === input._id) {\n                return input;\n            }\n            return bug;\n        });\n        axios\n            .put(`${process.env.REACT_APP_API}/bugs/${props.selectedBug._id}`, {\n                editedBug: input,\n            })\n            .then((response) => {\n                props.editBug([...newBugs]);\n                props.setModalIsActive(false);\n                props.selectBug(input);\n                console.log(response);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    };\n    return (\n        <div className=\"new_bug_wrap\">\n            <form onSubmit={handleSubmit} className=\"new_bug_form\">\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"title\">\n                        Title:\n                    </label>\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        name=\"title\"\n                        id=\"title\"\n                        value={input.title}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"project\">\n                        Project:\n                    </label>\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        name=\"project\"\n                        id=\"project\"\n                        value={input.project}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"blameFile\">\n                        Blame File:\n                    </label>\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        name=\"blameFile\"\n                        id=\"blameFile\"\n                        value={input.blameFile}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"summary\">\n                        Summary:\n                    </label>\n                    <textarea\n                        className=\"textarea\"\n                        type=\"text\"\n                        name=\"summary\"\n                        id=\"summary\"\n                        value={input.summary}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"readOut\">\n                        Error Readout:\n                    </label>\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        name=\"readOut\"\n                        id=\"readOut\"\n                        value={input.readOut}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"field is-grouped last-row\">\n                    <label className=\"label\" htmlFor=\"severity\">\n                        Severity:\n                    </label>\n                    <div className=\"select\">\n                        <select\n                            name=\"severity\"\n                            id=\"severity\"\n                            onChange={handleChange}\n                            value={input.severity}\n                        >\n                            <option value=\"moderate\">Moderate</option>\n                            <option value=\"minor\">Minor</option>\n                            <option value=\"breaking\">Breaking</option>\n                        </select>\n                    </div>\n                    <label className=\"label\" htmlFor=\"status\">\n                        Bug Status:\n                    </label>\n                    <div className=\"select\">\n                        <select\n                            name=\"status\"\n                            id=\"status\"\n                            onChange={handleChange}\n                            value={input.status}\n                        >\n                            <option value=\"open\">Open</option>\n                            <option value=\"closed\">Closed</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"field is-grouped\">\n                    <div className=\"control\">\n                        <button type=\"submit\" className=\"button is-info\">\n                            Save Changes\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(state);\n    return {\n        bugs: state.bugs,\n        editBug: state.editBug,\n        selectedBug: state.selectedBug,\n    };\n};\n\nexport default connect(mapStateToProps, {\n    editBug,\n    selectBug,\n})(EditBug);\n","import React from \"react\";\n\nexport default function BugError(props) {\n    return (\n        <div className=\"bug_body_row error_row\">\n            <p>\n                <span className=\"bug_label\">\n                    <i className=\"fas fa-bug\"></i>Error Readout:\n                </span>\n            </p>\n            <p className=\"bug_error_readout\">\n                {props.error ? props.error : \"No Error Message Available\"}\n            </p>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { deleteBug } from \"../actions\";\nimport { selectBug } from \"../actions\";\nimport BugStatus from \"./BugStatus\";\nimport BugSeverity from \"./BugSeverity\";\nimport Modal from \"./Modal\";\nimport EditBug from \"./EditBug\";\nimport BugError from \"./BugError\";\n\nfunction BugBody(props) {\n    const [modalIsActive, setModalIsActive] = useState(false);\n    const deleteBug = (id) => {\n        const newList = props.bugs.filter((bug) => bug._id !== id);\n        axios\n            .delete(`${process.env.REACT_APP_API}bugs/${props.selectedBug._id}`)\n            .then((data) => {\n                props.deleteBug(newList);\n                props.selectBug(null);\n                console.log(data);\n            });\n    };\n    return (\n        <div className=\"bug_body_wrap\">\n            <p className=\"bug_body_row\">\n                <span className=\"bug_label\">\n                    <i className=\"fas fa-quote-left\"></i>Summary:{\" \"}\n                </span>{\" \"}\n                {props.bug.summary}\n            </p>\n            <BugSeverity severity={props.bug.severity} />\n            <p className=\"bug_body_row\">\n                <span className=\"bug_label\">\n                    <i className=\"fas fa-file-alt\"></i>Blame File:\n                </span>{\" \"}\n                {props.bug.blameFile}\n            </p>\n            <BugError error={props.bug.readOut} />\n            <BugStatus status={props.bug.status} />\n            <div className=\"bug_controls_wrap\">\n                <button\n                    className=\"button is-primary edit_button\"\n                    onClick={() => setModalIsActive(true)}\n                >\n                    <i className=\"fas fa-edit\"></i>Edit\n                </button>\n                <button\n                    className=\"button is-danger\"\n                    onClick={() => deleteBug(props.bug._id)}\n                >\n                    <i className=\"fas fa-trash-alt\"></i>Delete\n                </button>\n            </div>\n            <Modal\n                modalIsActive={modalIsActive}\n                setModalIsActive={setModalIsActive}\n                modalTitle=\"Edit Bug\"\n                submitText=\"Save Changes\"\n            >\n                <EditBug bug={props.bug} setModalIsActive={setModalIsActive} />\n            </Modal>\n        </div>\n    );\n}\nconst mapStateToProps = (state) => {\n    return { bugs: state.bugs, selectedBug: state.selectedBug };\n};\n\nexport default connect(mapStateToProps, {\n    deleteBug,\n    selectBug,\n})(BugBody);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport BugBody from \"./BugBody\";\n\nfunction ExpandedBug(props) {\n    return (\n        <div className=\"expanded_wrap\">\n            {props.selectedBug ? (\n                <>\n                    <h2>{props.selectedBug.title}</h2>\n                    <BugBody\n                        bug={props.selectedBug}\n                        deleteBug={props.deleteBug}\n                    />\n                </>\n            ) : (\n                <div className=\"bug_empty_wrap\">\n                    <span className=\"expanded_bug_icon\">\n                        <i className=\"fas fa-bug\"></i>\n                    </span>\n                    <p>Select a bug to view details</p>\n                </div>\n            )}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return { selectedBug: state.selectedBug };\n};\n\nexport default connect(mapStateToProps)(ExpandedBug);\n","import React from \"react\";\n\nexport default function BugTitle(props) {\n    return (\n        <div className=\"bug_row title_row\">\n            <span className={\"bug_title_wrap\"}>\n                <span className={`severity severity--${props.severity}`}></span>\n                <h2 className=\"bug_title\">\n                    {props.title.length > 30\n                        ? `${props.title.slice(0, 30)}..`\n                        : props.title}\n                </h2>\n            </span>\n            <h3>{props.project}</h3>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport BugTitle from \"./BugTitle\";\n\nexport default function Bug(props) {\n    const [isOpen, setIsOpen] = useState(false);\n    const [isActive, setIsActive] = useState(false);\n\n    useEffect(() => {\n        if (props.selectedBug) {\n            if (props.bug._id === props.selectedBug._id) {\n                setIsActive(true);\n            } else {\n                setIsActive(false);\n            }\n        }\n    }, [props.bug, props.selectedBug]);\n\n    const toggleIsOpen = () => {\n        setIsOpen(!isOpen);\n    };\n    return (\n        <article\n            className={isActive ? \"bug_wrap is_open\" : \"bug_wrap\"}\n            onClick={() => {\n                props.selectBug(props.bug);\n            }}\n        >\n            <BugTitle\n                id={props.bug._id}\n                title={props.bug.title}\n                project={props.bug.project}\n                severity={props.bug.severity}\n                toggle={toggleIsOpen}\n            />\n        </article>\n    );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectBug } from \"../actions\";\n\nfunction BugDropdown(props) {\n    const chooseBug = (e) => {\n        const selectedBug = props.bugs.filter(\n            (bug) => bug.title === e.target.value\n        );\n        props.selectBug(...selectedBug);\n    };\n    return (\n        <div className=\"bugs_dropdown_wrap\">\n            <div className=\"select is-rounded\">\n                <select name=\"bug\" id=\"bugForm\" onChange={chooseBug}>\n                    {props.bugs.map((bug, i) => {\n                        return (\n                            <option value={bug.title} key={i}>\n                                {bug.title}\n                            </option>\n                        );\n                    })}\n                </select>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        bugs: state.bugs,\n        selectedBug: state.selectedBug,\n        filters: state.filters,\n    };\n};\n\nexport default connect(mapStateToProps, {\n    selectBug,\n})(BugDropdown);\n","import React from \"react\";\nimport Bug from \"./Bug\";\nimport BugDropdown from \"./BugDropdown\";\nimport { connect } from \"react-redux\";\nimport { selectBug } from \"../actions\";\n\nfunction BugFeed(props) {\n    const checkFilters = (bug) => {\n        if (props.filters.status && props.filters.project) {\n            return (\n                bug.status === props.filters.status &&\n                bug.project === props.filters.project\n            );\n        } else if (props.filters.status && !props.filters.project) {\n            return bug.status === props.filters.status;\n        } else if (props.filters.project && !props.filters.status) {\n            return bug.project === props.filters.project;\n        }\n        return true;\n    };\n    return (\n        <>\n            <div className=\"bugs_wrap\">\n                {props.bugs\n                    .filter((bug) => checkFilters(bug))\n                    .sort((a, b) => (a.createdAt > b.createdAt ? -1 : 1))\n                    .map((bug, i) => {\n                        return (\n                            <Bug\n                                bug={bug}\n                                key={bug.title + i}\n                                selectedBug={props.selectedBug}\n                                selectBug={props.selectBug}\n                            />\n                        );\n                    })}\n            </div>\n            <BugDropdown bugs={props.bugs} />\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(state);\n    return {\n        bugs: state.bugs,\n        selectedBug: state.selectedBug,\n        filters: state.filters,\n    };\n};\n\nexport default connect(mapStateToProps, {\n    selectBug,\n})(BugFeed);\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { selectBug } from \"../actions\";\nimport { loadBugs } from \"../actions\";\nimport NewBug from \"./NewBug\";\nimport Modal from \"./Modal\";\nimport SideBar from \"./SideBar\";\nimport ExpandedBug from \"./ExpandedBug\";\nimport BugFeed from \"./BugFeed\";\n\nconst API = process.env.REACT_APP_API;\n\nfunction Dashboard(props) {\n    const [modalIsActive, setModalIsActive] = useState(false);\n    useEffect(() => {\n        if (props.user) {\n            axios\n                .get(`${API}/bugs/${props.user.googleId}`)\n                .then(function (response) {\n                    props.loadBugs(response.data);\n                    console.log(response);\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        }\n    }, [props.user]);\n    return (\n        <section className=\"dashboard_wrap\">\n            <SideBar bugs={props.bugs} setModalIsActive={setModalIsActive} />\n            <div className=\"dashboard_inner_wrap\">\n                <BugFeed />\n                <ExpandedBug />\n            </div>\n            <Modal\n                modalIsActive={modalIsActive}\n                setModalIsActive={setModalIsActive}\n                modalTitle=\"Add Bug\"\n                submitText=\"Add Bug\"\n            >\n                <NewBug bugs={props.bugs} setModalIsActive={setModalIsActive} />\n            </Modal>\n        </section>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        bugs: state.bugs,\n        selectedBug: state.selectedBug,\n        user: state.user,\n    };\n};\n\nexport default connect(mapStateToProps, {\n    selectBug,\n    loadBugs,\n})(Dashboard);\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../actions/index\";\n\nconst clientId = process.env.REACT_APP_CLIENT_ID;\nconsole.log(clientId);\n\nfunction Login(props) {\n    const history = useHistory();\n    const onSuccess = (response) => {\n        console.log(response.profileObj);\n        props.signIn(response.profileObj);\n        history.push(\"/dashboard\");\n    };\n    const onFailure = (response) => {\n        console.log(response.profileObj);\n    };\n    return (\n        <GoogleLogin\n            clientId={clientId}\n            buttonText=\"Login / Signup\"\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            cookiePolicy={\"single_host_origin\"}\n            // isSignedIn={true}\n            render={(renderProps) => (\n                <button\n                    className=\"button is-primary\"\n                    onClick={renderProps.onClick}\n                    disabled={renderProps.disabled}\n                >\n                    <i className=\"fab fa-google\"></i> Login / Signup\n                </button>\n            )}\n        />\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return { signIn: state.signIn, user: state.user };\n};\n\nexport default connect(mapStateToProps, { signIn })(Login);\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { GoogleLogout } from \"react-google-login\";\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../actions/index\";\n\nconst clientId = process.env.REACT_APP_CLIENT_ID;\n\nfunction Login(props) {\n    const history = useHistory();\n    const onSuccess = () => {\n        console.log(\"user has logged out\");\n        props.signOut();\n        history.push(\"/\");\n    };\n    const onFailure = (response) => {\n        console.log(response.profileObj);\n    };\n    return (\n        <GoogleLogout\n            clientId={clientId}\n            onLogoutSuccess={onSuccess}\n            onLogOutFailure={onFailure}\n            render={(renderProps) => (\n                <button\n                    className=\"button is-info\"\n                    onClick={renderProps.onClick}\n                    disabled={renderProps.disabled}\n                >\n                    Logout\n                </button>\n            )}\n        />\n    );\n}\nexport default connect(null, { signIn, signOut })(Login);\n","import React from \"react\";\nimport Login from \"./Login\";\nimport Logout from \"./Logout\";\n\nexport default function NavBar() {\n    return (\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"navbar-brand\">\n                <a className=\"navbar-item\" href=\"/\">\n                    <h1>\n                        <i className=\"fas fa-bug\"></i>Aphid\n                    </h1>\n                </a>\n\n                <a\n                    href=\"/\"\n                    role=\"button\"\n                    className=\"navbar-burger burger\"\n                    aria-label=\"menu\"\n                    aria-expanded=\"false\"\n                    data-target=\"navbarBasicExample\"\n                >\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                </a>\n            </div>\n\n            <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n                <div className=\"navbar-start\">\n                    <a\n                        href=\"/https://github.com/han-sen/aphid\"\n                        className=\"navbar-item\"\n                    >\n                        Source Code\n                    </a>\n                </div>\n\n                <div className=\"navbar-end\">\n                    <div className=\"navbar-item\">\n                        <div className=\"buttons\">\n                            <Login />\n                            <Logout />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    );\n}\n","import React from \"react\";\n\nexport default function GitTab() {\n    return (\n        <a\n            href=\"https://github.com/han-sen/aphid\"\n            className=\"github-corner\"\n            aria-label=\"View source on GitHub\"\n        >\n            <svg\n                width=\"80\"\n                height=\"80\"\n                viewBox=\"0 0 250 250\"\n                style={{\n                    fill: \"#bebebe\",\n                    color: \"#222c41\",\n                    position: \"absolute\",\n                    top: 0,\n                    border: 0,\n                    left: 0,\n                    transform: \"scale(-1, 1)\",\n                }}\n                aria-hidden=\"true\"\n            >\n                <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n                <path\n                    d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n                    fill=\"currentColor\"\n                    style={{ transformOrigin: \"130px 106px\" }}\n                    className=\"octo-arm\"\n                ></path>\n                <path\n                    d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n                    fill=\"currentColor\"\n                    className=\"octo-body\"\n                ></path>\n            </svg>\n        </a>\n    );\n}\n","import React from \"react\";\nimport Login from \"./Login\";\nimport HeroSVG from \"../aphid-hero.png\";\nimport GitTab from \"./GitTab\";\n\nexport default function Home() {\n    return (\n        <>\n            <GitTab />\n            <section className=\"home_wrap\">\n                <div className=\"home_wrap_inner\">\n                    <div className=\"home_inner_panel\">\n                        <h1 className=\"home_title\">Aphid</h1>\n                        <p>\n                            An open-source bug tracking dashboard for cataloging\n                            your project's code issues.\n                        </p>\n                        <Login />\n                        <a href=\"https://han-sen.github.io/aphid-demo/\">\n                            <button className=\"button is-info\">\n                                <i className=\"fas fa-bug\"></i>View Demo\n                            </button>\n                        </a>\n                    </div>\n                    <div className=\"home_inner_panel\">\n                        <img src={HeroSVG} alt=\"hero\" className=\"home_image\" />\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard\";\nimport NavBar from \"./components/NavBar\";\nimport Home from \"./components/Home\";\nimport \"./styles/global.scss\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <main>\n                <Switch>\n                    <Route\n                        path=\"/dashboard\"\n                        render={(props) => {\n                            return (\n                                <>\n                                    <NavBar />\n                                    <Dashboard />\n                                </>\n                            );\n                        }}\n                    />\n                    <Route\n                        path=\"/\"\n                        render={(props) => {\n                            return <Home />;\n                        }}\n                    />\n                </Switch>\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\n// import seedData from \"../seed\";\n\nconst bugsReducer = (bugs = [], action) => {\n    if (action.type === \"ADD_BUG\") {\n        return [action.payload, ...bugs];\n    } else if (action.type === \"EDIT_BUG\") {\n        return action.payload;\n    } else if (action.type === \"DELETE_BUG\") {\n        return action.payload;\n    } else if (action.type === \"LOAD_BUGS\") {\n        return action.payload;\n    }\n    return bugs;\n};\n\nconst selectedBugReducer = (selectedBug = null, action) => {\n    if (action.type === \"BUG_SELECTED\") {\n        return action.payload;\n    }\n    return selectedBug;\n};\n\nconst filterReducer = (options = { status: \"open\", project: \"\" }, action) => {\n    if (action.type === \"FILTER_SELECTED\") {\n        return action.payload;\n    }\n    return { ...options };\n};\n\nconst userReducer = (user = null, action) => {\n    if (action.type === \"SIGN_IN\") {\n        return action.payload;\n    }\n    return user;\n};\n\nexport default combineReducers({\n    bugs: bugsReducer,\n    filters: filterReducer,\n    selectedBug: selectedBugReducer,\n    user: userReducer,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reducers from \"./reducers\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={createStore(reducers)}>\n            <Router>\n                <App />\n            </Router>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}